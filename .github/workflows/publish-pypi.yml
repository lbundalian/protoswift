name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'        # e.g. v0.1.2
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write    # required for Trusted Publishing (OIDC)

    env:
      HAVE_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        run: pip install uv

      - name: Verify version matches tag
        run: |
          python - <<'PY'
          import os, sys, tomllib, pathlib
          data = tomllib.loads(pathlib.Path("pyproject.toml").read_text())
          version = data["project"]["version"]
          tag = os.environ["GITHUB_REF_NAME"]  # e.g. v0.1.2
          if tag.startswith("v"):
              tag = tag[1:]
          if tag != version:
              print(f"Version mismatch: tag={os.environ['GITHUB_REF_NAME']} pyproject={version}")
              sys.exit(1)
          print(f"Version OK: {version}")
          PY

      - name: Build sdist and wheel
        run: uv build

      # Use API token if provided
      - name: Publish to PyPI (API token)
        if: ${{ env.HAVE_PYPI_TOKEN != '' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          password: ${{ secrets.PYPI_API_TOKEN }}

      # Otherwise use Trusted Publishing (configure publisher on PyPI)
      - name: Publish to PyPI (Trusted Publishing)
        if: ${{ env.HAVE_PYPI_TOKEN == '' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
